
#define KERNEL_STACK		0x50500000

.equ app_num_addr, 0x502001f4
.equ app_start_addr, 0x52000000
.equ kernel, 0x50201000
#include <asm.h>

ENTRY(_start)

    /* TODO: [p1-task3] setup C runtime environment for the user program */
  la t1, __bss_start
  la t2, __BSS_END__

L1:
  bgeu t1, t2, L2
  sw x0, (t1)
  addi t1, t1, 4
  j L1

L2:
  //get app number
  la a2, app_num_addr
	lh a3, (a2)

  lui a1, %hi(app_start_addr)
	addi a1, a1, %lo(app_start_addr)
	li a4, 0x10000

L3:
	add a1, a1, a4
	sub a3, a3, a2
	bgtz a3, L3
  add a1, a1, a4

  //save stack in a2
  add a2, x0, sp

  //set stack for app
  add sp, x0, a1
  
  
    /* TODO: [p1-task3] enter main function */
  call main

    /* TODO: [p1-task3] finish task and return to the kernel */

  //reset stack
  add sp, x0, a2

  //return to kernel
  la a1, kernel
	jr a1

    /* NOTE: You need to replace this with new mechanism in p3-task2! */


// while(1) loop, unreachable here
loop:
    wfi
    j loop

END(_start)
